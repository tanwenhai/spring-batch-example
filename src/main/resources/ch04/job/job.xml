<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
            xmlns:bean="http://www.springframework.org/schema/beans"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
    <bean:import resource="classpath:ch03/job-context.xml"/>
    <job id="baseJob" abstract="true">
        <listeners>
            <listener ref="sysoutAnnotionListener"/>
        </listeners>
    </job>
    <job id="billJob" parent="baseJob">
        <step id="billStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="csvItemReader"
                       writer="csvItemWriter"
                       processor="creditBillProcessor"
                       commit-interval="2">
                </chunk>
            </tasklet>
        </step>
        <listeners merge="true">
            <listener ref="sysoutListener"/>
        </listeners>
        <validator ref="validator"/>
    </job>
    <bean:bean id="sysoutListener" class="com.twh.example.ch04.listener.SystemOutJobExecutionListener"/>
    <bean:bean id="sysoutAnnotionListener" class="com.twh.example.ch04.listener.SystemOut"/>
    <bean:bean id="validator" class="org.springframework.batch.core.job.DefaultJobParametersValidator">
        <bean:property name="requiredKeys">
            <bean:value>date</bean:value>
        </bean:property>
        <bean:property name="optionalKeys">
            <bean:list>
                <bean:value>name</bean:value>
                <bean:value>inputResource</bean:value>
            </bean:list>
        </bean:property>
    </bean:bean>
    <bean:bean id="csvItemReader"
               class="org.springframework.batch.item.file.FlatFileItemReader"
               scope="step">
        <bean:property name="resource"
                       value="#{jobParameters['inputResource']}"/>
        <bean:property name="lineMapper">
            <bean:bean
                class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="lineTokenizer"/>
                <bean:property name="fieldSetMapper">
                    <bean:bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName"
                                       value="creditBill">
                        </bean:property>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>
    <bean:bean id="lineTokenizer"
               class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <bean:property name="delimiter" value=","/>
        <bean:property name="names">
            <bean:list>
                <bean:value>accountId</bean:value>
                <bean:value>name</bean:value>
                <bean:value>amount</bean:value>
                <bean:value>date</bean:value>
                <bean:value>address</bean:value>
            </bean:list>
        </bean:property>
    </bean:bean>
    <bean:bean id="creditBill" scope="prototype"
               class="com.twh.example.ch03.CreditBill">
    </bean:bean>
    <bean:bean id="creditBillProcessor" scope="step"
               class="com.twh.example.ch03.CreditBillProcessor">
    </bean:bean>
    <bean:bean id="csvItemWriter"
               class="org.springframework.batch.item.file.FlatFileItemWriter"
               scope="step">
        <bean:property name="resource" value="file:target/ch03/outputFile.csv"/>
        <bean:property name="lineAggregator">


            <bean:bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <bean:property name="delimiter" value=","/>
                <bean:property name="fieldExtractor">
                    <bean:bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <bean:property name="names" value="accountID,name,amount,date,address"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>
</bean:beans>